(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Template = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){
    "use strict";var create=function(){var r=new Float32Array(2);return r[0]=0,r[1]=0,r};exports.create=create,exports.clone=function(r){var t=new Float32Array(2);return t[0]=r[0],t[1]=r[1],t},exports.fromValues=function(r,t){var n=new Float32Array(2);return n[0]=r,n[1]=t,n},exports.copy=function(r,t){return r[0]=t[0],r[1]=t[1],r},exports.set=function(r,t,n){return r[0]=t,r[1]=n,r},exports.add=function(r,t,n){return r[0]=t[0]+n[0],r[1]=t[1]+n[1],r},exports.subtract=function(r,t,n){return r[0]=t[0]-n[0],r[1]=t[1]-n[1],r},exports.mul=function(r,t,n){return r[0]=t[0]*n[0],r[1]=t[1]*n[1],r},exports.div=function(r,t,n){return r[0]=t[0]/n[0],r[1]=t[1]/n[1],r},exports.ceil=function(r,t){return r[0]=Math.ceil(t[0]),r[1]=Math.ceil(t[1]),r},exports.floor=function(r,t){return r[0]=Math.floor(t[0]),r[1]=Math.floor(t[1]),r},exports.min=function(r,t,n){return r[0]=Math.min(t[0],n[0]),r[1]=Math.min(t[1],n[1]),r},exports.max=function(r,t,n){return r[0]=Math.max(t[0],n[0]),r[1]=Math.max(t[1],n[1]),r},exports.round=function(r,t){return r[0]=Math.round(t[0]),r[1]=Math.round(t[1]),r},exports.scale=function(r,t,n){return r[0]=t[0]*n,r[1]=t[1]*n,r},exports.scaleAndAdd=function(r,t,n,e){return r[0]=t[0]+n[0]*e,r[1]=t[1]+n[1]*e,r},exports.dist=function(r,t){var n=t[0]-r[0],e=t[1]-r[1];return Math.sqrt(n*n+e*e)},exports.sqrDist=function(r,t){var n=t[0]-r[0],e=t[1]-r[1];return n*n+e*e},exports.length=function(r){var t=r[0],n=r[1];return Math.sqrt(t*t+n*n)},exports.sqrLen=function(r){var t=r[0],n=r[1];return t*t+n*n},exports.negate=function(r,t){return r[0]=-t[0],r[1]=-t[1],r},exports.inverse=function(r,t){return r[0]=1/t[0],r[1]=1/t[1],r},exports.normalize=function(r,t){var n=t[0],e=t[1],o=n*n+e*e;return o>0&&(o=1/Math.sqrt(o),r[0]=t[0]*o,r[1]=t[1]*o),r},exports.dot=function(r,t){return r[0]*t[0]+r[1]*t[1]},exports.cross=function(r,t,n){var e=t[0]*n[1]-t[1]*n[0];return r[0]=r[1]=0,r[2]=e,r},exports.lerp=function(r,t,n,e){var o=t[0],u=t[1];return r[0]=o+e*(n[0]-o),r[1]=u+e*(n[1]-u),r},exports.random=function(r,t){t=t||1;var n=2*Math.random()*Math.PI;return r[0]=Math.cos(n)*t,r[1]=Math.sin(n)*t,r},exports.transformMat2=function(r,t,n){var e=t[0],o=t[1];return r[0]=n[0]*e+n[2]*o,r[1]=n[1]*e+n[3]*o,r},exports.transformMat2d=function(r,t,n){var e=t[0],o=t[1];return r[0]=n[0]*e+n[2]*o+n[4],r[1]=n[1]*e+n[3]*o+n[5],r},exports.transformMat3=function(r,t,n){var e=t[0],o=t[1];return r[0]=n[0]*e+n[3]*o+n[6],r[1]=n[1]*e+n[4]*o+n[7],r},exports.transformMat4=function(r,t,n){var e=t[0],o=t[1];return r[0]=n[0]*e+n[4]*o+n[12],r[1]=n[1]*e+n[5]*o+n[13],r};var vec=create();exports.forEach=function(r,t,n,e,o,u){var a,s;for(t||(t=2),n||(n=0),s=e?Math.min(e*t+n,r.length):r.length,a=n;a<s;a+=t)vec[0]=r[a],vec[1]=r[a+1],o(vec,vec,u),r[a]=vec[0],r[a+1]=vec[1];return r},exports.str=function(r){return"vec2("+r[0]+", "+r[1]+")"},exports.equals=function(r,t){return r[0]===t[0]&&r[1]===t[1]};
    },{}],2:[function(require,module,exports){
    "use strict";function Point(t,i,n){this.x=t,this.y=i,this.z=n||0}module.exports=Point,Point.prototype={clone:function(){return new Point(this.x,this.y,this.z)},add:function(t){return this.clone()._add(t)},sub:function(t){return this.clone()._sub(t)},multByPoint:function(t){return this.clone()._multByPoint(t)},divByPoint:function(t){return this.clone()._divByPoint(t)},mult:function(t){return this.clone()._mult(t)},div:function(t){return this.clone()._div(t)},rotate:function(t){return this.clone()._rotate(t)},rotateAround:function(t,i){return this.clone()._rotateAround(t,i)},matMult:function(t){return this.clone()._matMult(t)},unit:function(){return this.clone()._unit()},perp:function(){return this.clone()._perp()},round:function(){return this.clone()._round()},mag:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},equals:function(t){return this.x===t.x&&this.y===t.y},dist:function(t){return Math.sqrt(this.distSqr(t))},distSqr:function(t){var i=t.x-this.x,n=t.y-this.y;return i*i+n*n},angle:function(){return Math.atan2(this.y,this.x)},angleTo:function(t){return Math.atan2(this.y-t.y,this.x-t.x)},angleWith:function(t){return this.angleWithSep(t.x,t.y)},angleWithSep:function(t,i){return Math.atan2(this.x*i-this.y*t,this.x*t+this.y*i)},_matMult:function(t){var i=t[0]*this.x+t[1]*this.y,n=t[2]*this.x+t[3]*this.y;return this.x=i,this.y=n,this},_add:function(t){return this.x+=t.x,this.y+=t.y,this},_sub:function(t){return this.x-=t.x,this.y-=t.y,this},_mult:function(t){return this.x*=t,this.y*=t,this},_div:function(t){return this.x/=t,this.y/=t,this},_multByPoint:function(t){return this.x*=t.x,this.y*=t.y,this},_divByPoint:function(t){return this.x/=t.x,this.y/=t.y,this},_unit:function(){return this._div(this.mag()),this},_perp:function(){var t=this.y;return this.y=this.x,this.x=-t,this},_rotate:function(t){var i=Math.cos(t),n=Math.sin(t),s=i*this.x-n*this.y,h=n*this.x+i*this.y;return this.x=s,this.y=h,this},_rotateAround:function(t,i){var n=Math.cos(t),s=Math.sin(t),h=i.x+n*(this.x-i.x)-s*(this.y-i.y),r=i.y+s*(this.x-i.x)+n*(this.y-i.y);return this.x=h,this.y=r,this},_round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},Point.convert=function(t){return t instanceof Point?t:Array.isArray(t)?new Point(t[0],t[1]):t};
    },{}],3:[function(require,module,exports){
    "use strict";var testData,Template=module.exports={},subclasses={od:require("./middleware/echarts/EchartsLayer"),heatmap:require("./middleware/echarts/EchartsLayer"),scatter:require("./middleware/echarts/EchartsLayer"),grid:require("./middleware/atlas/fill")};Template.create=function(e){return new(subclasses[e.type]||Template)(e)},Template.registeratlas=function(e){e.Template=Template},Template.util=require("./util"),window.atlas&&(atlas.Template=Template);
    },{"./middleware/echarts/EchartsLayer":4,"./middleware/atlas/fill":8,"./util":10}],4:[function(require,module,exports){
    "use strict";function EchartsLayer(t){this.option=t,this.__reg();var e=t.map,a=e.getCanvasContainer();this._container=document.createElement("div"),this._container.style.width=e.getCanvas().style.width,this._container.style.height=e.getCanvas().style.height,this.chartId="echarts"+Math.random(),this._container.setAttribute("id",this.chartId),this._container.setAttribute("class","echartMap"),this._map=e,a.appendChild(this._container),this.chart=echarts.init(this._container),echarts.glMap=e,this.resize()}require("./GLMap.js"),EchartsLayer.prototype.__reg=function(){var t=this;echarts.extendComponentView({type:"GLMap",render:function(e,a,r){function o(){n||r.dispatchAction({type:"GLMapRoam"})}var n=!0,s=echarts.glMap,i=r.getZr().painter.getViewportRoot(),h=e.coordinateSystem,p=function(t,a){if(0!==document.getElementsByClassName("echartMap").length&&!n){var o=i.parentNode.parentNode?i.parentNode.parentNode.parentNode:i.parentNode,s=[-parseInt(o.style.left,10)||0,-parseInt(o.style.top,10)||0];i.style.left=s[0]+"px",i.style.top=s[1]+"px",h.setMapOffset(s),e.__mapOffset=s,r.dispatchAction({type:"GLMapRoam"})}};s.off("move",t._oldMoveHandler),s.off("zoomend",t._oldZoomEndHandler),s.on("move",p),s.on("zoomend",o),t._oldMoveHandler=p,t._oldZoomEndHandler=o;e.get("roam");n=!1}})},EchartsLayer.prototype.__unreg=function(){this._map.off("move",this._oldMoveHandler),this._map.off("zoomend",this._oldZoomEndHandler)},EchartsLayer.prototype.remove=function(){this._container.parentNode.removeChild(this._container),this.__unreg(),this._map=null,this.chart.clear(),this.chart.dispose()},EchartsLayer.prototype.resize=function(){var t=this;window.onresize=function(){t._map&&(t._container.style.width=t._map.getCanvas().style.width,t._container.style.height=t._map.getCanvas().style.height,t.chart.resize())}},EchartsLayer.prototype.getChartId=function(){return this.chartId},EchartsLayer.prototype.dispose=function(){this.chart.dispose()},EchartsLayer.prototype.name="EchartsLayer",module.exports=EchartsLayer;
    },{"./GLMap.js":5}],5:[function(require,module,exports){
    "use strict";window.echarts&&(echarts.registerCoordinateSystem("GLMap",require("./GLMapCoordSys")),require("./GLMapModel"),echarts.registerAction({type:"GLMapRoam",event:"GLMapRoam",update:"updateLayout"},function(e,t){})),module.exports={version:"1.0.0"};
    },{"./GLMapCoordSys":6,"./GLMapModel":7}],6:[function(require,module,exports){
    "use strict";function GLMapCoordSys(t,o){this._GLMap=t,this.dimensions=["lng","lat"],this._mapOffset=[0,0],this._api=o}GLMapCoordSys.prototype.dimensions=["lng","lat"],GLMapCoordSys.prototype.setMapOffset=function(t){this._mapOffset=t},GLMapCoordSys.prototype.getBMap=function(){return this._GLMap},GLMapCoordSys.prototype.dataToPoint=function(t){var o=this._GLMap.project(t),e=this._mapOffset;return[o.x-e[0],o.y-e[1]]},GLMapCoordSys.prototype.pointToData=function(t){var o=this._mapOffset,t=this._bmap.project([t[0]+o[0],t[1]+o[1]]);return[t.lng,t.lat]},GLMapCoordSys.prototype.getViewRect=function(){var t=this._api;return new echarts.graphic.BoundingRect(0,0,t.getWidth(),t.getHeight())},GLMapCoordSys.prototype.getRoamTransform=function(){return echarts.matrix.create()},GLMapCoordSys.dimensions=GLMapCoordSys.prototype.dimensions,GLMapCoordSys.create=function(t,o){var e;t.eachComponent("GLMap",function(t){var a=(o.getZr().painter.getViewportRoot(),echarts.glMap);e=new GLMapCoordSys(a,o),e.setMapOffset(t.__mapOffset||[0,0]),t.coordinateSystem=e}),t.eachSeries(function(t){"GLMap"===t.get("coordinateSystem")&&(t.coordinateSystem=e)})},module.exports=GLMapCoordSys;
    },{}],7:[function(require,module,exports){
    "use strict";module.exports=echarts.extendComponentModel({type:"GLMap",getBMap:function(){return this.__GLMap},defaultOption:{roam:!1}});
    },{}],8:[function(require,module,exports){
    "use strict";var Fill=function(){};module.exports=Fill;
    },{}],9:[function(require,module,exports){
    "use strict";var vec2=require("../../_atlas_/gl-matrix/src/vec2"),Curve=function(e,t,c,r){this._p0=vec2.fromValues(e[0],e[1]),this._c0=vec2.fromValues(t[0],t[1]),this._c1=vec2.fromValues(c[0],c[1]),this._p1=vec2.fromValues(r[0],r[1])};Curve.prototype.getVertexes=function(e,t,c,r,v,a){var s=vec2.create();vec2.lerp(s,e,t,.5);var i=vec2.create();vec2.lerp(i,t,c,.5);var u=vec2.create();vec2.lerp(u,c,r,.5);var o=vec2.create();vec2.lerp(o,s,i,.5);var h=vec2.create();vec2.lerp(h,i,u,.5);var n=vec2.create();vec2.lerp(n,o,h,.5);var p=this.getDistance(e,r,s),l=this.getDistance(e,r,o),g=this.getDistance(e,r,h),_=this.getDistance(e,r,u),f=vec2.create();vec2.subtract(f,r,e);var m=vec2.create();vec2.subtract(m,s,e);var V=vec2.create();vec2.subtract(V,o,e);var b=vec2.create();vec2.subtract(b,h,e);var x=vec2.create();vec2.subtract(x,u,e);var d=vec2.dot(m,f),C=vec2.dot(V,f),D=vec2.dot(b,f),y=vec2.dot(x,f),M=vec2.length(f);M*=M,p>v||l>v||g>v||_>v||d<0||C<0||D<0||y<0||d>M||C>M||D>M||y>M?(this.getVertexes(e,s,o,n,v,a),this.getVertexes(n,h,u,r,v,a)):a.push([e[0],e[1]],[t[0],t[1]],[c[0],c[1]],[r[0],r[1]])},Curve.prototype.getDistance=function(e,t,c){var r=vec2.create();vec2.subtract(r,t,e);var v=vec2.create();vec2.subtract(v,c,e);var a=vec2.length(r),s=vec2.length(v),i=vec2.dot(v,r);if(0===i)return s;var u=i/(s*a);return s*Math.sin(Math.acos(u))},Curve.prototype.approximate=function(e){var t=[];return this.getVertexes(this._p0,this._c0,this._c1,this._p1,e,t),t},module.exports=Curve;
    },{"../../_atlas_/gl-matrix/src/vec2":1}],10:[function(require,module,exports){
    "use strict";function lngLat2Mercator(e){var t=[],r=20037508.34*e[0]/180,n=Math.log(Math.tan((90+e[1])*Math.PI/360))/(Math.PI/180);return n=20037508.34*n/180,t.push(r),t.push(n),t}function mercator2LngLat(e){var t=[],r=e[0]/20037508.34*180,n=e[1]/20037508.34*180;return n=180/Math.PI*(2*Math.atan(Math.exp(n*Math.PI/180))-Math.PI/2),t.push(r),t.push(n),t}function getDistancesSeq(e,t){for(var r=0,n=0;n<t;n++)r+=e[n];return r}function calcDistance(e){for(var t=[],r=0;r<e.length-1;r++){var n=lngLat2Mercator(e[r]),o=lngLat2Mercator(e[r+1]),s=Math.sqrt(Math.pow(n[0]-o[0],2)+Math.pow(n[1]-o[1],2));t.push(s)}return t}function _getDistanceInterval(e){for(var t=[],r=0;r<e.length;r++){var n=e[r],o=lngLat2Mercator(n.slice(0,2)),s=lngLat2Mercator(n.slice(2,4)),a=Math.sqrt(Math.pow(o[0]-s[0],2)+Math.pow(o[1]-s[1],2));n.push(a),t.push(a)}return[Math.min.apply(null,t),Math.max.apply(null,t)]}function spliteLineAndGenGeo(e,t,r,n,o,s,a,u){for(var i=r[0]-t[0],l=r[1]-t[1],g=a[a.length-1],p=Math.round(g/s),c=Math.random()*p,v=Math.round(g/s),h=(g-u[0])/(u[1]-u[0])*(o-n)+n,f=0;f<p;f++){for(var m=-4*h/Math.pow(r[0]-t[0],2),L=-m*(r[0]+t[0]),y=m*r[0]*t[0],C={type:"Feature",geometry:{type:"LineString",coordinates:[[t[0]+f*i/p,t[1]+f*l/p],[t[0]+(f+1)*i/p,t[1]+(f+1)*l/p]]},properties:{start_height:m*Math.pow(t[0]+f*i/p,2)+L*(t[0]+f*i/p)+y,end_height:m*Math.pow(t[0]+(f+1)*i/p,2)+L*(t[0]+(f+1)*i/p)+y,link_seq:(f+c)%p,count:v,total:p,code:a[a.length-1]}},M=0;M<a.length-1;M++)C.properties["value"+M]=a[M];e.features.push(C)}}function classifyPoints(e,t,r,n){for(var o={origin:lngLat2Mercator([e[0][0],e[0][1]]),maxSegmentCount:0,clusters:{}},s=e[1],a=0;a<s.length;++a){var u=s[a],i=lngLat2Mercator([u[0],u[1]]),l=u[t],g=u[r],p=u[n],c=o.clusters[g];c||(c={representativePoint:null,subClusters:{}},o.clusters[g]=c);var v=c.subClusters[l];v||(v={representativePoint:null,points:[],values:[]},c.subClusters[l]=v),v.points.push(i),v.values.push(p)}return o}function computeClustersRepresentativePoint(e,t){for(var r=void 0===t.clusterIsNearest||t.clusterIsNearest,n=void 0!==t.clusterIgnoreDis?t.clusterIgnoreDis:1e3,o=void 0===t.subClusterIsNearest||t.subClusterIsNearest,s=void 0!==t.subClusterIgnoreDis?t.subClusterIgnoreDis:2e3,a=Object.getOwnPropertyNames(e.clusters),u=0;u<a.length;++u)for(var i=e.clusters[a[u]],l=Object.getOwnPropertyNames(i.subClusters),g=0;g<l.length;++g){var p=i.subClusters[l[g]];if(o){for(var c=[],v=0;v<p.points.length;++v){var h=p.points[v],f=getDistance(e.origin,h);c.push([f,v])}if(c.sort(function(e,t){return t[0]-e[0]}),c[0]<s)p.representativePoint=p.points[c[0][1]];else{var m=c.reverse().findIndex(function(e){return e[0]>s});p.representativePoint=p.points[c[m][1]]}}else{for(var L=[],y=0;y<p.points.length;++y){var C=p.points[y],M=getDistance(e.origin,C);M>s&&L.push(y)}for(var b=0,P=0,d=0;d<L.length;++d){var S=p.points[L[d]];b+=S[0],P+=S[1]}p.representativePoint=[b/L.length,P/L.length]}}for(var x=0;x<a.length;++x){var O=e.clusters[a[x]],N=Object.getOwnPropertyNames(O.subClusters);if(r){for(var w=[],j=0;j<N.length;++j){var G=O.subClusters[N[j]],_=G.representativePoint,T=getDistance(e.origin,_);w.push([T,j])}if(w.sort(function(e,t){return t[0]-e[0]}),w[0]<n)O.representativePoint=O.subClusters[N[w[0][1]]].representativePoint;else{var I=w.reverse().findIndex(function(e){return e[0]>n});O.representativePoint=O.subClusters[N[w[I][1]]].representativePoint}}else{for(var V=[],D=0;D<N.length;++D){var F=O.subClusters[N[D]],A=F.representativePoint;getDistance(e.origin,A)>s&&V.push(D)}for(var q=0,k=0,B=0;B<V.length;++B){var E=O.subClusters[N[B]];q+=E[0],k+=E[1]}O.representativePoint=[q/V.length,k/V.length]}}}function computeBezierLines(e,t){for(var r=Object.getOwnPropertyNames(e.clusters),n=0;n<r.length;++n)for(var o=e.clusters[r[n]],s=Object.getOwnPropertyNames(o.subClusters),a=0;a<s.length;++a){var u=o.subClusters[s[a]];u.lines=[];for(var i=0;i<u.points.length;++i){var l=u.points[i],g=o.representativePoint,p=u.representativePoint,c=new Curve(e.origin,g,p,l),v=c.approximate(t);u.lines.push(v)}}}function computeMaxValue(e){for(var t=Object.getOwnPropertyNames(e.clusters),r=0;r<t.length;++r)for(var n=e.clusters[t[r]],o=Object.getOwnPropertyNames(n.subClusters),s=0;s<o.length;++s){for(var a=n.subClusters[o[s]],u=Number.MIN_VALUE,i=0;i<a.values.length;++i){var l=a.values[i];l>u&&(u=l)}a.maxValue=u}}function computeSegments(e,t){for(var r=Number.MIN_VALUE,n=Object.getOwnPropertyNames(e.clusters),o=0;o<n.length;++o)for(var s=e.clusters[n[o]],a=Object.getOwnPropertyNames(s.subClusters),u=0;u<a.length;++u){var i=s.subClusters[a[u]];i.segmentsGroup=[];for(var l=0;l<i.lines.length;++l){var g=i.lines[l],p=[];lineToSegments(g,t,p),i.segmentsGroup.push(p),p.length>r&&(r=p.length)}}e.maxSegmentCount=r}function clustersLineToGeojson(e){for(var t={type:"FeatureCollection",features:[]},r=Object.getOwnPropertyNames(e.clusters),n=0;n<r.length;++n)for(var o=e.clusters[r[n]],s=Object.getOwnPropertyNames(o.subClusters),a=0;a<s.length;++a)for(var u=o.subClusters[s[a]],i=0;i<u.lines.length;++i){var l={type:"Feature",geometry:{type:"LineString",coordinates:u.lines[i]},properties:{level1:s[a],level2:r[n]}};t.features.push(l)}return geojsonConvertToGeographys(t,"LineString"),t}function clustersPointToGeojson(e){for(var t={type:"FeatureCollection",features:[]},r=Object.getOwnPropertyNames(e.clusters),n=0;n<r.length;++n)for(var o=e.clusters[r[n]],s=Object.getOwnPropertyNames(o.subClusters),a=0;a<s.length;++a)for(var u=o.subClusters[s[a]],i=0;i<u.points.length;++i){var l={type:"Feature",geometry:{type:"Point",coordinates:u.points[i]},properties:{level1:s[a],level2:r[n]}};t.features.push(l)}return geojsonConvertToGeographys(t,"Point"),t}function clustersSegmentsToGeojson(e){for(var t={type:"FeatureCollection",features:[]},r=Number.MIN_VALUE,n=Object.getOwnPropertyNames(e.clusters),o=0;o<n.length;++o)for(var s=e.clusters[n[o]],a=Object.getOwnPropertyNames(s.subClusters),u=0;u<a.length;++u)for(var i=s.subClusters[a[u]],l=0;l<i.segmentsGroup.length;++l){var g=i.segmentsGroup[l],p=Math.round(Math.random()*e.maxSegmentCount),c=1+g.length;c>r&&(r=c);for(var v=0;v<g.length;++v){var h=g[v],f={type:"Feature",geometry:{type:"LineString",coordinates:h},properties:{link_seq:1+v,total_link_count:g.length,offset_link_count:p,isMain:i.values[l]===i.maxValue}};t.features.push(f)}}return e.actualMaxSegmentCount=r,geojsonConvertToGeographys(t,"LineString"),t}function convertToGeographys(e){for(var t=[],r=0;r<e.length;++r){var n=e[r];t.push(mercator2LngLat(n))}return t}function geojsonConvertToGeographys(e,t){for(var r=0;r<e.features.length;++r){var n=e.features[r];"LineString"===t?n.geometry.coordinates=convertToGeographys(n.geometry.coordinates):"Point"===t&&(n.geometry.coordinates=mercator2LngLat(n.geometry.coordinates))}}function lineToSegments(e,t,r){var n=cutLineByLength(e,t);if(n){if(1===n.length)return void r.push(n[0]);r.push(n[0]),lineToSegments(n[1],t,r)}}function getDistance(e,t){return Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1]))}function getLength(e){for(var t=0,r=1;r<e.length;r++)t+=getDistance(e[r-1],e[r]);return t}function cutLineByLength(e,t){if(0===getLength(e))return null;for(var r=0,n=1;n<e.length;n++){var o=getDistance(e[n-1],e[n]),s=r+o;if(s>t){var a=t-r,u=getSegmentVertexByLength(e[n-1],e[n],a),i=e.slice(0,n);i.push(u);var l=e.slice(n);return l.unshift(u),[i,l]}if(s===t){var g=e.slice(0,n);g.push(e[n]);return[g,e.slice(n)]}r=s}return[e]}function getSegmentVertexByLength(e,t,r){var n=getDistance(e,t),o=r/n;return[e[0]+(t[0]-e[0])*o,e[1]+(t[1]-e[1])*o]}var Curve=require("./curve"),Point=require("../../_atlas_/point-geometry");exports.pointArrayToGridGeoJson=function(e,t,r){void 0===r&&(r=!1);for(var n={type:"FeatureCollection",features:[]},o=0;o<e.length;o++){for(var s=r?[e[o][1],e[o][0]]:e[o],a=lngLat2Mercator(s),u={type:"Feature",geometry:{type:"Polygon",coordinates:[[mercator2LngLat([a[0]-t/2,a[1]+t/2]),mercator2LngLat([a[0]+t/2,a[1]+t/2]),mercator2LngLat([a[0]+t/2,a[1]-t/2]),mercator2LngLat([a[0]-t/2,a[1]-t/2]),mercator2LngLat([a[0]-t/2,a[1]+t/2])]]},properties:{count:e[o][2],name:100*Math.random()+""}},i=0,l=3;l<e[o].length;l++)u.properties["value"+i++]=e[o][l];n.features.push(u)}return n},exports.pointArrayToPointsGeoJson=function(e,t){for(var r=0;r<e.length;r++);},exports.lngLat2Mercator=lngLat2Mercator,exports.mercator2LngLat=mercator2LngLat,exports.pointArrayToSpriteGeoJson=function(e,t,r){void 0===t&&(t=10),void 0===r&&(r=1);for(var n={type:"FeatureCollection",features:[]},o=calcDistance(e),s=[],a=0;a<e.length-1;a++){var u=Math.round(o[a]/t),i=e[a+1][0]-e[a][0],l=e[a+1][1]-e[a][1];if(0!==u)for(var g=0;g<=u;g++)s.push([e[a][0]+i/u*g,e[a][1]+l/u*g])}for(var a=0;a<s.length-4;a++){var p={type:"Feature",geometry:{type:"LineString",coordinates:[s[a],s[a+1],s[a+2],s[a+3]]},properties:{link_seq:a,status:r}};n.features.push(p)}return n},exports.pointArrayToSymtrackingGeoJson=function(e,t,r){void 0===t&&(t=!0),void 0===r&&(r=10);for(var n={type:"FeatureCollection",features:[]},o=calcDistance(e),s=[],a=0;a<e.length-1;a++){var u=Math.round(o[a]/r);s.push(u)}for(var a=0;a<e.length-1;a++)for(var i=s[a],l=e[a],g=e[a+1],p=g[0]-l[0],c=g[1]-l[1],v=0;v<i;v++)if(t){var h={type:"Feature",geometry:{type:"LineString",coordinates:[[l[0]+v*p/i,l[1]+v*c/i],[l[0]+(v+1)*p/i,l[1]+(v+1)*c/i]]},properties:{link_seq:getDistancesSeq(s,a)+v}};n.features.push(h)}else{var f=[l[0]+v*p/i,l[1]+v*c/i],m=[l[0]+(v+1)*p/i,l[1]+(v+1)*c/i],L=Point.convert(lngLat2Mercator(f)),y=Point.convert(lngLat2Mercator(m)),h={type:"Feature",geometry:{type:"Point",coordinates:f},properties:{link_seq:getDistancesSeq(s,a)+v,car_rotate:-L.angleTo(y)/Math.PI*180+180}};n.features.push(h)}return n},exports.startAndEndPointArrayToAirlineGeoJson=function(e,t,r,n){void 0===t&&(t=1e3),void 0===r&&(r=2e3),void 0===n&&(n=100);for(var o={type:"FeatureCollection",features:[]},s=_getDistanceInterval(e),a=0;a<e.length;a++){var u=e[a];spliteLineAndGenGeo(o,u.slice(0,2),u.slice(2,4),t,r,n,u.slice(4),s)}return o},exports.dataArrayToTrackingGeoJson=function(e,t,r){void 0===r&&(r=!1);for(var n={type:"FeatureCollection",features:[]},o=0;o<e.length;o++){var s=r?[e[o][1],e[o][0]]:e[o],a=lngLat2Mercator(s),u={type:"Feature",geometry:{type:"Polygon",coordinates:[[mercator2LngLat([a[0]-t/2,a[1]+t/2]),mercator2LngLat([a[0]+t/2,a[1]+t/2]),mercator2LngLat([a[0]+t/2,a[1]-t/2]),mercator2LngLat([a[0]-t/2,a[1]-t/2]),mercator2LngLat([a[0]-t/2,a[1]+t/2])]]},properties:{count:e[o][2],name:100*Math.random()+""}};n.features.push(u)}return n},exports.createBezierDatas=function(e,t,r,n,o,s,a){var u=classifyPoints(e,t,r,n);computeClustersRepresentativePoint(u,void 0!==a?a:{}),computeMaxValue(u),computeBezierLines(u,o),computeSegments(u,s);var i=clustersPointToGeojson(u),l=clustersLineToGeojson(u),g=clustersSegmentsToGeojson(u);return{maxSegmentCount:u.actualMaxSegmentCount,points:i,lines:l,segments:g}},exports.createBezierLines=function(e,t,r,n,o,s){var a=e[0],u=e[1],i=Number.MIN_VALUE,l=Number.MAX_VALUE,g={};a=lngLat2Mercator(a);for(var p=0;p<u.length;++p){var c=u[p],v=lngLat2Mercator([c[0],c[1]]);c[0]=v[0],c[1]=v[1],g.hasOwnProperty(c[r])||(g[c[r]]={nearestPoint:null,subLevels:{}}),g[c[r]].subLevels.hasOwnProperty(c[t])||(g[c[r]].subLevels[c[t]]={nearestPoint:null,points:[]}),g[c[r]].subLevels[c[t]].points.push([c[0],c[1]]),c[n]<l&&(l=c[n]),c[n]>i&&(i=c[n])}for(var h=(i-l)/3,f=[],m=0;m<3;++m){var L=Math.round(l+h*m)+1;0===m&&(L=l),f.push({minValue:L,maxValue:Math.round(l+h*(m+1)),values:[],actualMaxValue:l,segmentCounts:[],maxSegmentCount:1,startSegmentCount:1})}for(var y=Object.getOwnPropertyNames(g),C=0;C<y.length;++C)for(var M=g[y[C]],b=Object.getOwnPropertyNames(M.subLevels),P=0;P<b.length;++P){for(var d=M.subLevels[b[P]],S=0,x=0,O=0;O<d.points.length;++O){var N=d.points[O];S+=N[0],x+=N[1]}d.nearestPoint=[S/d.points.length,x/d.points.length]}for(var w=0;w<y.length;++w){for(var j=g[y[w]],G=null,_=Number.MAX_VALUE,T=Object.getOwnPropertyNames(j.subLevels),I=0;I<T.length;++I){var V=j.subLevels[T[I]].nearestPoint,D=getDistance(a,V);D<_&&(_=D,G=V)}j.nearestPoint=G}for(var F={type:"FeatureCollection",features:[]},A=Number.MIN_VALUE,q=[],k=0;k<u.length;k++){var B=u[k],E=g[B[r]].nearestPoint,U=g[B[r]].subLevels[B[t]].nearestPoint,J=[B[0],B[1]],z=new Curve(a,E,U,J),R=z.approximate(o),X=[];lineToSegments(R,s,X),q.push({segments:X,value:B[n]}),X.length>A&&(A=X.length);for(var H=0;H<f.length;H++){var K=f[H];if(B[n]>=K.minValue&&B[n]<=K.maxValue){K.segmentCounts.push(X.length),K.values.push(B[n]);break}}}for(var Q=0;Q<f.length;Q++){for(var W=f[Q],Y=1,Z=0;Z<W.segmentCounts.length;Z++)W.segmentCounts[Z]>Y&&(Y=W.segmentCounts[Z]);W.maxSegmentCount=Y;for(var $=1,ee=0;ee<W.values.length;ee++)W.values[ee]>$&&($=W.values[ee]);W.actualMaxValue=$,W.startSegmentCount=0===Q?1:f[Q-1].startSegmentCount+f[Q-1].maxSegmentCount}for(var te=0;te<q.length;te++){for(var re=q[te].value,ne=null,oe=0;oe<f.length;oe++){var se=f[oe];if(re>=se.minValue&&re<=se.maxValue){ne=se;break}}for(var ae=ne.startSegmentCount,ue=q[te].segments,ie=0;ie<ue.length;ie++){for(var le=0;le<ue[ie].length;le++)ue[ie][le]=mercator2LngLat(ue[ie][le]);var ge={type:"Feature",geometry:{type:"LineString",coordinates:ue[ie]},properties:{link_seq:ae+1+ie,isMain:re===ne.actualMaxValue}};F.features.push(ge)}}return{maxSegmentCount:f[f.length-1].startSegmentCount+f[f.length-1].maxSegmentCount,data:F}},exports.createBezierLines1=function(e,t,r,n,o,s){for(var a=e,u={},i={},l=0;l<a.length;++l){var g=a[l],p=lngLat2Mercator([g[0],g[1]]);g[0]=p[0],g[1]=p[1],p=lngLat2Mercator([g[3],g[4]]),g[3]=p[0],g[4]=p[1],u[g[t]]={center:null,points:[]},i[g[r]]={center:null,points:[]}}for(var c=0;c<a.length;++c){var v=a[c];u[v[t]].points.push([v[0],v[1]]),i[v[r]].points.push([v[3],v[4]])}for(var h=Object.getOwnPropertyNames(u),f=0;f<h.length;++f){for(var m=u[h[f]],L=m.points.length,y=0,C=0,M=0;M<L;++M){var b=m.points[M];y+=b[0],C+=b[1]}m.center=[y/L,C/L]}h=Object.getOwnPropertyNames(i);for(var P=0;P<h.length;++P){for(var d=i[h[P]],S=d.points.length,x=0,O=0,N=0;N<S;++N){var w=d.points[N];x+=w[0],O+=w[1]}d.center=[x/S,O/S]}for(var j={type:"FeatureCollection",features:[]},G=Number.MIN_VALUE,_=[],T=0;T<a.length;T++){var I=a[T],V=[I[0],I[1]],D=u[I[t]].center,F=i[I[r]].center,A=[I[3],I[4]],q=new Curve(V,D,F,A),k=q.approximate(o),B=[];lineToSegments(k,s,B),_.push({segments:B,value:I[n]}),B.length>G&&(G=B.length)}for(var E=0;E<_.length;E++)for(var U=_[E].segments,J=0;J<U.length;J++){for(var z=0;z<U[J].length;z++)U[J][z]=mercator2LngLat(U[J][z]);var R={type:"Feature",geometry:{type:"LineString",coordinates:U[J]},properties:{link_seq:J+1}};j.features.push(R)}return{maxSegmentCount:G,data:j}};
    },{"../../_atlas_/point-geometry":2,"./curve":9}]},{},[3])(3)
    });
    
    //# sourceMappingURL=template.js.map